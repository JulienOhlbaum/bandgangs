{"version":3,"sources":["components/GridItem.js","components/GenresGrid.jsx","components/Tracks.js","components/PlaylistGrid.jsx","components/IconSearch.jsx","components/Navbar.jsx","components/HomePage.jsx","App.jsx","Credentials.js","index.jsx"],"names":["GridItem","genre","useState","isShown","setIsShown","history","useHistory","className","onMouseEnter","onMouseLeave","onClick","id","push","src","icons","url","alt","name","replace","GenresGrid","filterGenres","map","i","Tracks","tracks","setSong","track","preview_url","artists","PlaylistGrid","token","setCatchid","playlists","useParams","setTracks","song","displayTracks","setDisplayTracks","playlist","axios","method","headers","Authorization","then","res","data","items","handleClik","images","controls","autoPlay","type","IconSearch","setValueInput","on","setOn","Provider","value","size","color","oppacity","padding","onChange","e","target","placeholder","Navbar","to","title","HomePage","href","App","spotify","ClientId","ClientSecret","setPlaylist","catchid","setToken","genres","setGenres","valueInput","setFilteredGenres","useEffect","filter","toLowerCase","includes","btoa","tokenResponse","access_token","categories","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a0285d0.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport './GridItem.css';\n\nconst GridItem = ({ ...genre }) => {\n  const [isShown, setIsShown] = useState(false);\n\n  const history = useHistory();\n\n  const handleClick = (id) => {\n    history.push(`/playlist/${id}`);\n  };\n\n  return (\n    <div\n      className='grid-item'\n      onMouseEnter={() => setIsShown(true)}\n      onMouseLeave={() => setIsShown(false)}\n      onClick={() => handleClick(genre.id)}>\n      <img src={(genre.icons[0].url)} alt=\"picture\" className={isShown && 'hoveredImage'} />\n      {isShown && <p className='hoveredItem'>{genre.name.replace(/[&]/g, 'n').replace(/[/-]/g, ' ')}</p>}\n    </div>\n  );\n};\n\nGridItem.propTypes = {\n  filterGenres: PropTypes.string.isRequired\n};\n\nexport default GridItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport GridItem from './GridItem';\nimport './GenresGrid.css';\n\nconst GenresGrid = ({ filterGenres }) => {\n  return (\n    <div className=\"grid-container\">\n      {filterGenres.map((genre, i) => (\n        <GridItem key={i} {...genre} />\n      ))}\n    </div>\n  );\n};\n\nGenresGrid.propTypes = {\n  token: PropTypes.string.isRequired,\n  filterGenres: PropTypes.string.isRequired\n};\n\nexport default GenresGrid;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Tracks.css';\n\nconst Tracks = ({ tracks, setSong }) => {\n  return (\n    <div className ='playlist-item track-container'>\n      {tracks.map((track, i) => {\n        return (\n          <div className='tracks' key={i} onClick={() => setSong(track.track.preview_url)}>\n            <p>{track.track.artists[0].name}       -       {track.track.name}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nTracks.propTypes = {\n  tracks: PropTypes.string.isRequired,\n  setSong: PropTypes.string.isRequired\n};\n\nexport default Tracks;\n","import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport Tracks from './Tracks';\n\nimport './PlaylistGrid.css';\n\nconst PlaylistGrid = ({ token, setCatchid, playlists }) => {\n  const { id } = useParams();\n  setCatchid(id);\n  const [tracks, setTracks] = useState([]);\n  const [song, setSong] = useState('');\n  const [displayTracks, setDisplayTracks] = useState(false);\n\n  const handleClik = (id) => {\n    setDisplayTracks(true);\n    axios(`https://api.spotify.com/v1/playlists/${id}/tracks?limit=50`, {\n      method: 'GET',\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then((res) => {\n      setTracks(res.data.items);\n    });\n  };\n  return (\n    <div>\n      <h4 className='category-title'>{id.replace(/[&]/g, 'n').replace(/[/-_]/g, ' ')}</h4>\n      <div className='playlist-container'>\n        <div className='scrollx-section'>\n          { playlists.map((playlist) => {\n            return (\n              <div className='playlist-item' key={playlist.id} onClick={() => handleClik(playlist.id)} >\n              <img src={(playlist.images[0].url)} alt=\"picture\"/>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      {displayTracks &&\n      <div className='trackAndPlayer-container'>\n        <h2 className='track-title'>Tracks</h2>\n        <audio controls autoPlay={false} name=\"media\" src={song} type=\"audio/mpeg\" className='player' />\n      </div>}\n      {displayTracks &&\n        <Tracks tracks={tracks} setSong={setSong}/>}\n    </div>\n  );\n};\n\nPlaylistGrid.propTypes = {\n  setCatchid: PropTypes.string.isRequired,\n  token: PropTypes.string.isRequired,\n  playlists: PropTypes.string.isRequired\n};\n\nexport default PlaylistGrid;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { IconContext } from 'react-icons/lib';\n\nimport './IconSearch.css';\n\nconst IconSearch = ({ setValueInput }) => {\n  const [on, setOn] = useState(false);\n\n  return (\n    <IconContext.Provider value={{ size: '50', color: 'white', oppacity: '0.8', padding: '50' }}>\n      <div className=\"search-container\">\n        {on && <input onChange={(e) => setValueInput(e.target.value)} type=\"text\" placeholder=\"search...\" className=\"search-txt\" />}\n        <button onClick={() => setOn(!on)} className=\"search-btn\"/>\n      </div>\n    </IconContext.Provider>\n  );\n};\n\nIconSearch.propTypes = {\n  setValueInput: PropTypes.string.isRequired\n};\n\nexport default IconSearch;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport IconSearch from './IconSearch';\n\nimport './Navbar.css';\n\nconst Navbar = ({ setValueInput }) => {\n  return (\n      <div>\n        <nav className=\"header\" id=\"section-home\">\n          <Link to='/home' className='link-title'>\n            <div title='title-container'>\n              <h1 className='title'>BANDGANGS</h1>\n            </div>\n          </Link>\n          <IconSearch setValueInput={setValueInput} />\n        </nav>\n      </div>\n  );\n};\n\nNavbar.propTypes = {\n  setValueInput: PropTypes.string.isRequired\n};\n\nexport default Navbar;\n","import { Link } from 'react-router-dom';\n\nimport './HomePage.css';\n\nconst HomePage = () => {\n  return (\n    <div className=\"container-homepage\">\n      <header className=\"app-header\">\n          <h2 className=\"text-homepage\">Relax. Chill. Discover gooooood music.</h2>\n            <h3 className=\"intro-homepage\">\n              Welcome to Bandgangs, an innovative way to listen to music, discover artists, only providing you\n              with the cream of the crop. Let yourself drop in this thrilling and sensory experience.\n            </h3>\n        <Link to='/home'>\n          <div className=\"arrow\">\n            <a href=\"#section-home\"></a>\n          </div>\n        </Link>\n      </header>\n    </div>\n  );\n};\nexport default HomePage;\n","import React, { useState, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Credentials } from './Credentials';\nimport axios from 'axios';\n\nimport GenresGrid from './components/GenresGrid';\nimport PlaylistGrid from './components/PlaylistGrid';\nimport Navbar from './components/Navbar';\nimport HomePage from './components/HomePage';\n\nimport './App.css';\n\nconst App = () => {\n  const spotify = Credentials();\n  // HOOKS PLAYLISTGRID\n  const [playlists, setPlaylist] = useState([]);\n  const [catchid, setCatchid] = useState('');\n\n  // HOOKS GENREGRID\n  const [token, setToken] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [valueInput, setValueInput] = useState('');\n  const [filterGenres, setFilteredGenres] = useState(genres);\n\n  // USE EFFECT GENREGRID/ID&SECRET\n  useEffect(() => {\n    setFilteredGenres(genres.filter(genre => genre.name.toLowerCase().includes(valueInput.toLowerCase())));\n  }, [valueInput, genres]);\n\n  useEffect(\n    () => {\n      axios('https://accounts.spotify.com/api/token', {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          Authorization: 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n        },\n        data: 'grant_type=client_credentials',\n        method: 'POST'\n      }).then((tokenResponse) => {\n        setToken(tokenResponse.data.access_token);\n      });\n    },\n    [spotify.ClientId, spotify.ClientSecret]\n  );\n\n  // USE EFFECT GENREGRID/TOKEN\n  useEffect(() => {\n    axios('https://api.spotify.com/v1/browse/categories?limit=50&country=US&locale=UK', {\n      method: 'GET',\n      headers: { Authorization: 'Bearer ' + token }\n    }).then((res) => {\n      setGenres(res.data.categories.items);\n    });\n  }, [token]);\n\n  // USE EFFECT PLAYLSIT/ID\n  useEffect(\n    () => {\n      axios(`https://api.spotify.com/v1/browse/categories/${catchid}/playlists?limit=50`, {\n        method: 'GET',\n        headers: { Authorization: 'Bearer ' + token }\n      }).then((res) => {\n        setPlaylist(res.data.playlists.items);\n      });\n    },\n    [token, catchid]\n  );\n  return (\n    <div className=\"container\">\n     <Navbar setValueInput={setValueInput} />\n      <Switch>\n        <Route path=\"/playlist/:id\" playlists={playlists}>\n          <PlaylistGrid token={token} playlists={playlists} setCatchid={setCatchid} />\n        </Route>\n        <Route exact path='/'>\n          <HomePage />\n        </Route>\n\n        <Route path=\"/home\">\n          <GenresGrid filterGenres={filterGenres} />\n        </Route>\n\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","const Credentials = () => {\n  return {\n    ClientId: 'c76a95966a23433f8a6ee8aa561d66ac',\n    ClientSecret: 'e35b7518201e448b854e8a4a4b2b6d24'\n  };\n};\nexport {\n  Credentials\n};\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}