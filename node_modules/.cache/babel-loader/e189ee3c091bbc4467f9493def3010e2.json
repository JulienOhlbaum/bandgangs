{"ast":null,"code":"import _slicedToArray from\"/Users/jinien/Documents/De\\u0301veloppement/Projet 2/paris-react-0920-pjt-bandgang/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import{Switch,Route}from'react-router-dom';import{Credentials}from'./Credentials';import axios from'axios';import GenresGrid from'./components/GenresGrid';import PlaylistGrid from'./components/PlaylistGrid';import Navbar from'./components/Navbar';import HomePage from'./components/HomePage';import'./App.css';var App=function App(){var spotify=Credentials();// HOOKS PLAYLISTGRID\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),playlists=_useState2[0],setPlaylist=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),catchid=_useState4[0],setCatchid=_useState4[1];// HOOKS GENREGRID\nvar _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),token=_useState6[0],setToken=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),genres=_useState8[0],setGenres=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),valueInput=_useState10[0],setValueInput=_useState10[1];var _useState11=useState(genres),_useState12=_slicedToArray(_useState11,2),filterGenres=_useState12[0],setFilteredGenres=_useState12[1];// USE EFFECT GENREGRID/ID&SECRET\nuseEffect(function(){setFilteredGenres(genres.filter(function(genre){return genre.name.toLowerCase().includes(valueInput.toLowerCase());}));},[valueInput,genres]);useEffect(function(){axios('https://accounts.spotify.com/api/token',{headers:{'Content-Type':'application/x-www-form-urlencoded',Authorization:'Basic '+btoa(spotify.ClientId+':'+spotify.ClientSecret)},data:'grant_type=client_credentials',method:'POST'}).then(function(tokenResponse){setToken(tokenResponse.data.access_token);});},[spotify.ClientId,spotify.ClientSecret]);// USE EFFECT GENREGRID/TOKEN\nuseEffect(function(){axios('https://api.spotify.com/v1/browse/categories?limit=50&country=US&locale=UK',{method:'GET',headers:{Authorization:'Bearer '+token}}).then(function(res){setGenres(res.data.categories.items);});},[token]);// USE EFFECT PLAYLSIT/ID\nuseEffect(function(){axios(\"https://api.spotify.com/v1/browse/categories/\".concat(catchid,\"/playlists?limit=50\"),{method:'GET',headers:{Authorization:'Bearer '+token}}).then(function(res){setPlaylist(res.data.playlists.items);});},[token,catchid]);return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Navbar,{setValueInput:setValueInput}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/playlist/:id\",playlists:playlists,children:/*#__PURE__*/_jsx(PlaylistGrid,{token:token,playlists:playlists,setCatchid:setCatchid})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsx(HomePage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/home\",children:/*#__PURE__*/_jsx(GenresGrid,{filterGenres:filterGenres})})]})]});};export default App;","map":{"version":3,"sources":["/Users/jinien/Documents/Développement/Projet 2/paris-react-0920-pjt-bandgang/src/App.jsx"],"names":["React","useState","useEffect","Switch","Route","Credentials","axios","GenresGrid","PlaylistGrid","Navbar","HomePage","App","spotify","playlists","setPlaylist","catchid","setCatchid","token","setToken","genres","setGenres","valueInput","setValueInput","filterGenres","setFilteredGenres","filter","genre","name","toLowerCase","includes","headers","Authorization","btoa","ClientId","ClientSecret","data","method","then","tokenResponse","access_token","res","categories","items"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Credentials } from './Credentials';\nimport axios from 'axios';\n\nimport GenresGrid from './components/GenresGrid';\nimport PlaylistGrid from './components/PlaylistGrid';\nimport Navbar from './components/Navbar';\nimport HomePage from './components/HomePage';\n\nimport './App.css';\n\nconst App = () => {\n  const spotify = Credentials();\n  // HOOKS PLAYLISTGRID\n  const [playlists, setPlaylist] = useState([]);\n  const [catchid, setCatchid] = useState('');\n\n  // HOOKS GENREGRID\n  const [token, setToken] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [valueInput, setValueInput] = useState('');\n  const [filterGenres, setFilteredGenres] = useState(genres);\n\n  // USE EFFECT GENREGRID/ID&SECRET\n  useEffect(() => {\n    setFilteredGenres(genres.filter(genre => genre.name.toLowerCase().includes(valueInput.toLowerCase())));\n  }, [valueInput, genres]);\n\n  useEffect(\n    () => {\n      axios('https://accounts.spotify.com/api/token', {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          Authorization: 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n        },\n        data: 'grant_type=client_credentials',\n        method: 'POST'\n      }).then((tokenResponse) => {\n        setToken(tokenResponse.data.access_token);\n      });\n    },\n    [spotify.ClientId, spotify.ClientSecret]\n  );\n\n  // USE EFFECT GENREGRID/TOKEN\n  useEffect(() => {\n    axios('https://api.spotify.com/v1/browse/categories?limit=50&country=US&locale=UK', {\n      method: 'GET',\n      headers: { Authorization: 'Bearer ' + token }\n    }).then((res) => {\n      setGenres(res.data.categories.items);\n    });\n  }, [token]);\n\n  // USE EFFECT PLAYLSIT/ID\n  useEffect(\n    () => {\n      axios(`https://api.spotify.com/v1/browse/categories/${catchid}/playlists?limit=50`, {\n        method: 'GET',\n        headers: { Authorization: 'Bearer ' + token }\n      }).then((res) => {\n        setPlaylist(res.data.playlists.items);\n      });\n    },\n    [token, catchid]\n  );\n  return (\n    <div className=\"container\">\n     <Navbar setValueInput={setValueInput} />\n      <Switch>\n        <Route path=\"/playlist/:id\" playlists={playlists}>\n          <PlaylistGrid token={token} playlists={playlists} setCatchid={setCatchid} />\n        </Route>\n        <Route exact path='/'>\n          <HomePage />\n        </Route>\n\n        <Route path=\"/home\">\n          <GenresGrid filterGenres={filterGenres} />\n        </Route>\n\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}