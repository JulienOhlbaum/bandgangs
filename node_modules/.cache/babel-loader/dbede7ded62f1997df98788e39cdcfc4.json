{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jinien/Documents/De\\u0301veloppement/Projet 2/paris-react-0920-pjt-bandgang/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Credentials } from './Credentials';\nimport axios from 'axios';\nimport GenresGrid from './components/GenresGrid';\nimport PlaylistGrid from './components/PlaylistGrid';\nimport Navbar from './components/Navbar';\nimport HomePage from './components/HomePage';\nimport './App.css';\n\nconst App = () => {\n  _s();\n\n  const spotify = Credentials(); // HOOKS PLAYLISTGRID\n\n  const [playlists, setPlaylist] = useState([]);\n  const [catchid, setCatchid] = useState(''); // HOOKS GENREGRID\n\n  const [token, setToken] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [valueInput, setValueInput] = useState('');\n  const [filterGenres, setFilteredGenres] = useState(genres); // USE EFFECT GENREGRID/ID&SECRET\n\n  useEffect(() => {\n    setFilteredGenres(genres.filter(genre => genre.name.toLowerCase().includes(valueInput.toLowerCase())));\n  }, [valueInput, genres]);\n  useEffect(() => {\n    axios('https://accounts.spotify.com/api/token', {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n      },\n      data: 'grant_type=client_credentials',\n      method: 'POST'\n    }).then(tokenResponse => {\n      setToken(tokenResponse.data.access_token);\n    });\n  }, [spotify.ClientId, spotify.ClientSecret]); // USE EFFECT GENREGRID/TOKEN\n\n  useEffect(() => {\n    axios('https://api.spotify.com/v1/browse/categories?limit=50', {\n      method: 'GET',\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(res => {\n      setGenres(res.data.categories.items);\n    });\n  }, [token]); // USE EFFECT PLAYLSIT/ID\n\n  useEffect(() => {\n    axios(`https://api.spotify.com/v1/browse/categories/${catchid}/playlists?limit=50`, {\n      method: 'GET',\n      headers: {\n        Authorization: 'Bearer ' + token\n      }\n    }).then(res => {\n      setPlaylist(res.data.playlists.items);\n    });\n  }, [token, catchid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          setValueInput: setValueInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GenresGrid, {\n          filterGenres: filterGenres\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/playlist/:id\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PlaylistGrid, {\n          token: token,\n          playlists: playlists,\n          setCatchid: setCatchid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"X5IqzUo7aNu2mEBvR5o2gg7STVM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jinien/Documents/Développement/Projet 2/paris-react-0920-pjt-bandgang/src/App.jsx"],"names":["React","useState","useEffect","Switch","Route","Credentials","axios","GenresGrid","PlaylistGrid","Navbar","HomePage","App","spotify","playlists","setPlaylist","catchid","setCatchid","token","setToken","genres","setGenres","valueInput","setValueInput","filterGenres","setFilteredGenres","filter","genre","name","toLowerCase","includes","headers","Authorization","btoa","ClientId","ClientSecret","data","method","then","tokenResponse","access_token","res","categories","items"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Credentials } from './Credentials';\nimport axios from 'axios';\n\nimport GenresGrid from './components/GenresGrid';\nimport PlaylistGrid from './components/PlaylistGrid';\nimport Navbar from './components/Navbar';\nimport HomePage from './components/HomePage';\n\nimport './App.css';\n\nconst App = () => {\n  const spotify = Credentials();\n  // HOOKS PLAYLISTGRID\n  const [playlists, setPlaylist] = useState([]);\n  const [catchid, setCatchid] = useState('');\n\n  // HOOKS GENREGRID\n  const [token, setToken] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [valueInput, setValueInput] = useState('');\n  const [filterGenres, setFilteredGenres] = useState(genres);\n\n  // USE EFFECT GENREGRID/ID&SECRET\n  useEffect(() => {\n    setFilteredGenres(genres.filter(genre => genre.name.toLowerCase().includes(valueInput.toLowerCase())));\n  }, [valueInput, genres]);\n\n  useEffect(\n    () => {\n      axios('https://accounts.spotify.com/api/token', {\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          Authorization: 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)\n        },\n        data: 'grant_type=client_credentials',\n        method: 'POST'\n      }).then((tokenResponse) => {\n        setToken(tokenResponse.data.access_token);\n      });\n    },\n    [spotify.ClientId, spotify.ClientSecret]\n  );\n\n  // USE EFFECT GENREGRID/TOKEN\n  useEffect(() => {\n    axios('https://api.spotify.com/v1/browse/categories?limit=50', {\n      method: 'GET',\n      headers: { Authorization: 'Bearer ' + token }\n    }).then((res) => {\n      setGenres(res.data.categories.items);\n    });\n  }, [token]);\n\n  // USE EFFECT PLAYLSIT/ID\n  useEffect(\n    () => {\n      axios(`https://api.spotify.com/v1/browse/categories/${catchid}/playlists?limit=50`, {\n        method: 'GET',\n        headers: { Authorization: 'Bearer ' + token }\n      }).then((res) => {\n        setPlaylist(res.data.playlists.items);\n      });\n    },\n    [token, catchid]\n  );\n\n  return (\n    <div className=\"container\">\n      <Switch>\n\n        <Route exact path='/'>\n          <HomePage />\n        </Route>\n\n        <Route path=\"/home\">\n          <Navbar setValueInput={setValueInput} />\n          <GenresGrid filterGenres={filterGenres } />\n        </Route>\n\n        <Route path=\"/playlist/:id\">\n          <Navbar />\n          <PlaylistGrid token={token} playlists={playlists} setCatchid={setCatchid}/>\n        </Route>\n\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}